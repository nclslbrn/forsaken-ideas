{"version":3,"file":"bundle.js","sources":["../../../sketch-common/infobox.js","../../../sketch-common/glitchText.js","../../../sketch-common/handle-action.js","../../../sketch-common/svg-tracer.js","../../../sketch-common/AutomataGrid.js","../../../sketch/cellular-automata/MirrorShape.js","../../../sketch/cellular-automata/PlottingFunction.js","../../../sketch-common/stabilo68-colors.js","../../../sketch-common/Notification.js","../../../sketch/cellular-automata/index.js"],"sourcesContent":["const infobox = () => {\n\n    const infoBoxElement = document.getElementById('infobox');\n\n    if (infoBoxElement != null) {\n        infoBoxElement.classList.toggle('active')\n    }\n\n}\nexport default infobox","const chars = [...'0123456789', ...':/*|&#@$!<>', ...'{}[]+-_^~%?;()']\nconst duration = 45\n\nexport default class GlitchText {\n    constructor(property) {\n        this.element = property.element\n        this.trueText = property.element.innerText || property.element.innerHTML\n        this.numChar = this.trueText.length\n        this.effect = property.effect\n        this.curChar = 0\n        this.biteChar = ''\n\n        for (let i = 0; i < this.numChar; i++) {\n            let charAtI = this.trueText.substr(i, 1)\n            if (charAtI && charAtI === ' ') {\n                this.biteChar += ' '\n            } else {\n                this.biteChar += chars[Math.floor(Math.random() * chars.length)]\n            }\n        }\n        this.element.innerHTML = this.effect == 'replace' ? this.biteChar : ''\n        for (let x = 0; x <= this.numChar; x++) {\n            setTimeout(() => {\n                if (this.effect === 'add') {\n                    this.addChar()\n                } else if (this.effect === 'replace') {\n                    this.replaceChar()\n                }\n            }, x * duration)\n        }\n    }\n    replaceChar() {\n        let middleStringPart\n        if (this.curChar + 1 < this.numChar) {\n            middleStringPart = chars[Math.floor(Math.random() * chars.length)]\n        } else {\n            middleStringPart = ''\n        }\n        let firstStringPart = this.trueText.substr(0, this.curChar)\n        let lastStringPart = this.biteChar.substr(this.curChar, this.numChar)\n        this.element.innerHTML =\n            firstStringPart + middleStringPart + lastStringPart\n        this.element.dataset.text =\n            firstStringPart + middleStringPart + lastStringPart\n        this.curChar++\n    }\n    addChar() {\n        let middleStringPart\n        if (this.curChar + 1 < this.numChar) {\n            middleStringPart = chars[Math.floor(Math.random() * chars.length)]\n        } else {\n            middleStringPart = ''\n        }\n\n        let firstStringPart = this.trueText.substr(0, this.curChar)\n        this.element.innerHTML = firstStringPart + middleStringPart\n        this.element.dataset.text = firstStringPart + middleStringPart\n        this.curChar++\n    }\n}\n","import GlitchText from './glitchText'\n\nconst handleAction = () => {\n    window['openOffFrame'] = () => {\n        document.body.classList.toggle('openedOffWindow')\n        const titleElem = document.getElementById('projectTitle')\n        new GlitchText({\n            element: titleElem,\n            effect: 'add'\n        })\n    }\n    const buttons = document.querySelectorAll('[data-action]')\n\n    if (typeof buttons != 'undefined') {\n        for (let b = 0; b < buttons.length; b++) {\n            const action = buttons[b].getAttribute('data-action')\n            buttons[b].addEventListener(\n                'click',\n                function () {\n                    const calledFunction = window[action]\n                    if (typeof calledFunction !== 'function') {\n                        console.log(action, ' is not defined')\n                    } else {\n                        calledFunction()\n                    }\n                },\n                false\n            )\n        }\n    }\n}\n\nexport default handleAction\n","/**\n * svgTracer\n *\n * @class\n * @name SvgTracer\n * @classdesc Utility class to create SVG (optimized for Inkscape)\n * @author Nicolas Lebrun\n * @license MIT\n *\n */\n\nexport default class SvgTracer {\n    /**\n     * Setup tracer\n     * @constructs\n     * @param {Object} options Tracer options\n     * @property {object} parentElem - the HTML dom element where include the SVG\n     * @property {(('A3_landscape'|'A3_portrait'|'A3_Square'|'A3_topSpiralNotebook'|'A4_landscape'|'A4_portrait'|'P32x24'|'P24x32')|{w: number, h: number})} size - format name listed above or cm {w: width, h: height}\n     * @property {number} dpi - resolution 72, 150 or 300\n     * @property {string} background - specify color for non white background\n     */\n    constructor(options) {\n        this.parentElem = options.parentElem\n        this.dpi = options.dpi === undefined ? 150 : options.dpi\n        this.background =\n            options.background === undefined ? 'white' : options.background\n        this.printFormat = {\n            A3_landscape: { w: 42, h: 29.7 },\n            A3_portrait: { w: 29.7, h: 42 },\n            A3_Square: { w: 29.7, h: 29.7 },\n            A3_topSpiralNotebook: { w: 29.7, h: 40.5 },\n            A4_landscape: { w: 29.7, h: 21 },\n            A4_portrait: { w: 21, h: 29.7 },\n            P32x24: { w: 32, h: 24 },\n            P24x32: { w: 24, h: 32 }\n        }\n        this.dpiToPix = {\n            72: 30,\n            150: 59,\n            300: 118\n        }\n        this.namespace = {\n            inkscape: 'http://www.inkscape.org/namespaces/inkscape',\n            svg: 'http://www.w3.org/2000/svg'\n        }\n        this.groups = []\n        if (options.parentElem !== undefined) {\n            this.parentElem = options.parentElem\n\n            if (\n                this.printFormat[options.size] !== undefined ||\n                (options.size.w !== undefined && options.size.h !== undefined)\n            ) {\n                if (this.dpiToPix[this.dpi] !== undefined) {\n                    // Custom size\n                    if (options.size.w && options.size.h) {\n                        this.width = options.size.w * this.dpiToPix[this.dpi]\n                        this.height = options.size.h * this.dpiToPix[this.dpi]\n                        // CM size\n                        this.size = `${options.size.w}x${options.size.h}`\n                        this.printSize = options.size\n                    }\n                    // Referenced print formats\n                    else if (this.printFormat[options.size]) {\n                        //\n                        this.width =\n                            this.printFormat[options.size].w *\n                            this.dpiToPix[this.dpi]\n                        this.height =\n                            this.printFormat[options.size].h *\n                            this.dpiToPix[this.dpi]\n                        // Format name size\n                        this.size = options.size\n                        this.printSize = this.printFormat[options.size]\n                    }\n                } else {\n                    console.log(\n                        'DPI is not set to 72, 150 or 300, we cannot initialize <svg>.'\n                    )\n                }\n            } else {\n                console.log(\n                    'Wrong format passed, possible options are : ',\n                    Object.keys(this.printFormat),\n                    ' or custom size object {w: width, h: height}'\n                )\n            }\n        } else {\n            console.error(\"We can't found HTML element where to add the <svg>.\")\n        }\n    }\n    /**\n     * Create main SVG dom element\n     */\n    init() {\n        if (this.parentElem && this.width && this.height) {\n            // html and inksape header (tested only on Debian Inkscape 1.0)\n            this.elem = document.createElementNS(this.namespace.svg, 'svg')\n            this.elem.setAttribute('version', '1.1')\n            this.elem.setAttribute('xmlns', this.namespace.svg)\n            this.elem.setAttribute('xmlns:svg', this.namespace.svg)\n            this.elem.setAttribute(\n                'xmlns:xlink',\n                'http://www.w3.org/1999/xlink'\n            )\n            this.elem.setAttribute('xmlns:inkscape', this.namespace.inkscape)\n\n            this.elem.setAttribute('width', `${this.printSize.w}cm`)\n            this.elem.setAttribute('height', `${this.printSize.h}cm`)\n            this.elem.setAttribute(\n                'viewBox',\n                `0 0 ${this.width} ${this.height}`\n            )\n\n            const scaling =\n                window.innerWidth > window.innerHeight\n                    ? 'max-height: 80vh; width: auto;'\n                    : 'max-width: 85vw; height: auto;'\n            this.elem.setAttribute(\n                'style',\n                `${scaling} background: ${this.background}; box-shadow: 0 0.5em 1em rgba(0,0,0,0.1);`\n            )\n\n            // create an array of group instance (key = group(props.name))\n            this.groups = []\n            this.parentElem.appendChild(this.elem)\n        }\n    }\n    /**\n     * Remove every element in the SVG dom element\n     */\n    clear() {\n        while (this.elem.firstChild) {\n            this.elem.removeChild(this.elem.firstChild)\n        }\n        this.groups = []\n    }\n    /**\n     * Remove everything in groups (dom) elements\n     * @param {(string[]|boolean)} groups - (optional) array of specific groups to clear or false (clear all groups)\n     */\n    clearGroups(groups = false) {\n        for (const group_name in this.groups) {\n            if (!groups || groups.includes(group_name)) {\n                while (this.groups[group_name].firstChild) {\n                    this.groups[group_name].removeChild(\n                        this.groups[group_name].firstChild\n                    )\n                }\n            }\n        }\n    }\n    /**\n     * Add elem to svg group\n     * @param {string} group - the group name\n     * @param {object} svgItem - the node element (path, circle...) to append\n     */\n    appendToGroup(group, svgItem) {\n        if (this.groups !== undefined || this.groups[group] !== undefined) {\n            if (svgItem !== undefined) {\n                this.groups[group].appendChild(svgItem)\n            } else {\n                console.error(\n                    \"The SVG element is not set, and can't be added to group\"\n                )\n            }\n        } else {\n            console.error(`Group ${group} doesn't exist.`)\n        }\n    }\n    /**\n     * Drawing a rect\n     *\n     * @param {Object} rectProps rectangle properties\n     * @property {number} x - top left x coordinate of the rectangle\n     * @property {number} y - top left y coordinate of the rectangle\n     * @property {number} w - width of the rectangle\n     * @property {number} h - height of the rectangle\n     * @property {string} fill - background color name or color value (HEX, RGB, HSL)\n     * @property {string} stroke - border color name or color value (HEX, RGB, HSL)\n     * @property {string} group - group name if you want to add rect to a specific group\n     */\n    rect(rectProps) {\n        rectProps.x = rectProps.x === undefined ? 0 : rectProps.x\n        rectProps.y = rectProps.y === undefined ? 0 : rectProps.y\n        rectProps.w = rectProps.w === undefined ? 0 : rectProps.w\n        rectProps.h = rectProps.h === undefined ? 0 : rectProps.h\n        rectProps.fill = rectProps.fill === undefined ? false : rectProps.fill\n        rectProps.stroke =\n            rectProps.stroke === undefined ? false : rectProps.stroke\n        rectProps.group =\n            rectProps.group === undefined ? false : rectProps.group\n\n        const rect = document.createElementNS(this.namespace.svg, 'rect')\n\n        rect.setAttribute('x', rectProps.x)\n        rect.setAttribute('y', rectProps.y)\n        rect.setAttribute('width', rectProps.w)\n        rect.setAttribute('height', rectProps.h)\n\n        if (rectProps.fill) rect.setAttribute('fill', rectProps.fill)\n        if (rectProps.stroke) rect.setAttribute('stroke', rectProps.stroke)\n\n        if (rectProps.group) {\n            this.appendToGroup(rectProps.group, rect)\n        } else {\n            this.elem.appendChild(rect)\n        }\n    }\n    /**\n     * Draw a circle\n     * @param {Object} circleProps circle properties\n     * @property {number} x - x coordinate of the circle center\n     * @property {number} y - y coordinate of the circle center\n     * @property {number} r - radius of the circle\n     * @property {string} fill - background color name or color value (HEX, RGB, HSL)\n     * @property {string} stroke - border color name or color value (HEX, RGB, HSL)\n     * @property {string} group - group name if you want to add rect to a specific group\n     */\n    circle(circleProps) {\n        circleProps.x = circleProps.x === undefined ? 0 : circleProps.x\n        circleProps.y = circleProps.y === undefined ? 0 : circleProps.y\n        circleProps.r = circleProps.r === undefined ? 0 : circleProps.r\n        circleProps.fill =\n            circleProps.fill === undefined ? false : circleProps.fill\n        circleProps.stroke =\n            circleProps.stroke === undefined ? false : circleProps.stroke\n        circleProps.group =\n            circleProps.group === undefined ? false : circleProps.group\n\n        const circle = document.createElementNS(this.namespace.svg, 'circle')\n        circle.setAttribute('cx', circleProps.x)\n        circle.setAttribute('cy', circleProps.y)\n        circle.setAttribute('r', circleProps.r)\n\n        if (circleProps.fill) circle.setAttribute('fill', circleProps.fill)\n        if (circleProps.stroke)\n            circle.setAttribute('stroke', circleProps.stroke)\n\n        if (circleProps.group) {\n            this.appendToGroup(circleProps.group, circle)\n        } else {\n            this.elem.appendChild(circle)\n        }\n    }\n    /**\n     * Draw triangle\n     * @param {Object} triangleProps triangle properties\n     * @property {array} points - two dimensional array (points[n] = [x coordinate, y coordinate])\n     * @property {string} fill - background color name or color value (HEX, RGB, HSL)\n     * @property {string} stroke - border color name or color value (HEX, RGB, HSL)\n     * @property {boolean} close - determine if path is closed or open\n     * @property {string} name - a name attribute\n     * @property {string} group - group name if you want to add path to a specific group\n     */\n    triangle(triangleProps) {\n        if (triangleProps.points === undefined) {\n            console.error(\n                'You must specify 3 points in property object to draw a triangle'\n            )\n            return\n        } else {\n            if (triangleProps.points.length < 3) {\n                console.error(\n                    \"It seems that triangleProps.points doesn't have three points.\"\n                )\n                return\n            }\n            if (triangleProps.points.length > 3) {\n                console.error(\n                    'Props.point contains more than 3 coordinates, triangle will only use the three first ones.'\n                )\n            }\n        }\n        triangleProps.fill =\n            triangleProps.fill === undefined ? false : triangleProps.fill\n        triangleProps.stroke =\n            triangleProps.stroke === undefined ? false : triangleProps.stroke\n        triangleProps.close =\n            triangleProps.close === undefined ? false : triangleProps.close\n        triangleProps.name =\n            triangleProps.name === undefined ? false : triangleProps.name\n        triangleProps.group =\n            triangleProps.group === undefined ? false : triangleProps.group\n\n        const triangle = document.createElementNS(this.namespace.svg, 'path')\n        triangle.setAttribute(\n            'd',\n            'M ' +\n                triangleProps.points[0][0] +\n                ',' +\n                triangleProps.points[0][1] +\n                'L ' +\n                triangleProps.points[1][0] +\n                ',' +\n                triangleProps.points[1][1] +\n                'L ' +\n                triangleProps.points[2][0] +\n                ',' +\n                triangleProps.points[2][1] +\n                'Z'\n        )\n        if (triangleProps.fill)\n            triangle.setAttribute('fill', triangleProps.fill)\n        if (triangleProps.stroke)\n            triangle.setAttribute('stroke', triangleProps.stroke)\n        if (triangleProps.name)\n            triangle.setAttribute('name', triangleProps.name)\n        if (triangleProps.group) {\n            this.appendToGroup(triangleProps.group, triangle)\n        } else {\n            this.elem.appendChild(triangle)\n        }\n    }\n    /**\n     * Draw line\n     * @param {Object} pathProps path properties\n     * @property {array} points - two dimensional array (points[n] = [x coordinate, y coordinate])\n     * @property {string} fill - background color name or color value (HEX, RGB, HSL)\n     * @property {string} stroke - border color name or color value (HEX, RGB, HSL)\n     * @property {number} strokeWidth - border width in pixels positive int only\n     * @property {boolean} close - determine if path is closed or open\n     * @property {string} name - a name attribute\n     * @property {string} group - group name if you want to add path to a specific group\n     */\n    path(pathProps) {\n        if (pathProps.points === undefined) {\n            console.error('You must specify points coordinates to draw a line')\n            return\n        }\n        pathProps.fill = pathProps.fill === undefined ? false : pathProps.fill\n        pathProps.stroke =\n            pathProps.stroke === undefined ? false : pathProps.stroke\n        pathProps.strokeWidth =\n            pathProps.strokeWidth === undefined || Number(pathProps.setAttr) > 1\n                ? false\n                : pathProps.strokeWidth\n        pathProps.close =\n            pathProps.close === undefined ? false : pathProps.close\n        pathProps.name = pathProps.name === undefined ? false : pathProps.name\n        pathProps.group =\n            pathProps.group === undefined ? false : pathProps.group\n\n        const path = document.createElementNS(this.namespace.svg, 'path')\n        let d = `M ${pathProps.points[0][0]} ${pathProps.points[0][1]}`\n        for (let i = 1; i < pathProps.points.length; i++) {\n            d += ` L${pathProps.points[i][0]} ${pathProps.points[i][1]}`\n        }\n        if (pathProps.close)\n            d += ` L${pathProps.points[0][0]} ${pathProps.points[0][1]}`\n        path.setAttribute('d', d)\n        if (pathProps.fill) path.setAttribute('fill', pathProps.fill)\n        if (pathProps.stroke) path.setAttribute('stroke', pathProps.stroke)\n        if (pathProps.strokeWidth)\n            path.setAttribute('stroke-width', pathProps.strokeWidth)\n        if (pathProps.name) path.setAttribute('name', pathProps.name)\n        if (pathProps.group) {\n            this.appendToGroup(pathProps.group, path)\n        } else {\n            this.elem.appendChild(path)\n        }\n    }\n    /**\n     * Draw text\n     * @param textProps text properties\n     * @property {number} x - top left x coordinate text position\n     * @property {number} y - top left y coordinate text position\n     * @property {string} text - the text to draw\n     * @property {string} fontFamily - font family name of the text\n     * @property {number} fontSize - font size of the text\n     * @property {string} fill - color of text\n     * @property {string} anchor - horizontal alignment (start, middle or end)\n     * @property {string} name - a name attribute\n     * @property {string} group - group name if you want to add path to a specific group\n     */\n    text(textProps) {\n        if (textProps.x === undefined) {\n            console.error('You need to specify x property')\n            return\n        }\n        if (textProps.y === undefined) {\n            console.error('You need to specify y property')\n            return\n        }\n        if (textProps.text === undefined) {\n            console.error('You need to specify the text that will be displayed')\n            return\n        }\n\n        textProps.fontFamily =\n            textProps.fontFamily === undefined\n                ? 'sans-serif'\n                : textProps.fontFamily\n        textProps.fontSize =\n            textProps.fontSize === undefined ? 16 : textProps.fontSize\n        textProps.fill = textProps.fill === undefined ? 'black' : textProps.fill\n        textProps.anchor =\n            textProps.group === undefined ||\n            !['start', 'middle', 'end'].includes(textProps.anchor)\n                ? false\n                : textProps.anchor\n        textProps.name = textProps.name === undefined ? false : textProps.name\n        textProps.group =\n            textProps.group === undefined ? false : textProps.group\n\n        const text = document.createElementNS(this.namespace.svg, 'text')\n        text.setAttribute('x', textProps.x)\n        text.setAttribute('y', textProps.y)\n        text.setAttribute('font-family', textProps.fontFamily)\n        text.setAttribute('font-size', textProps.fontSize)\n        text.setAttribute('fill', textProps.fill)\n\n        if (textProps.name) text.setAttribute('name', textProps.name)\n        if (textProps.anchor) text.setAttribute('text-anchor', textProps.anchor)\n\n        text.innerHTML = textProps.text\n\n        if (textProps.group) {\n            this.appendToGroup(textProps.group, text)\n        } else {\n            this.elem.appendChild(text)\n        }\n    }\n    /**\n     * Create group\n     * @param {Object} groupProps group properties\n     * @property {string} name - an unique group name\n     * @property {string} stroke - a stroke color attribute\n     * @property {string} strokeWidth - a stroke-width color attribute\n     * @property {string} fill - a value of the fill attribute\n     * @property {string} group - group name an other group to nest the new one\n     * @property {string} id - testing inkscape layer\n     */\n    group(groupProps) {\n        if (groupProps.name === undefined) {\n            console.error(\n                'You must specified a name because you need it to fill group after created it'\n            )\n            return\n        }\n        groupProps.fill =\n            groupProps.fill === undefined ? false : groupProps.fill\n        groupProps.stroke =\n            groupProps.stroke === undefined ? false : groupProps.stroke\n        groupProps.group =\n            groupProps.group === undefined ? false : groupProps.group\n        groupProps.strokeWidth =\n            groupProps.strokeWidth === undefined\n                ? false\n                : groupProps.strokeWidth\n        groupProps.id =\n            groupProps.id === undefined ? false : 'layer' + groupProps.id\n\n        const groupElem = document.createElementNS(this.namespace.svg, 'g')\n        if (groupProps.name) {\n            groupElem.setAttribute('name', groupProps.name)\n            groupElem.setAttributeNS(\n                this.namespace.inkscape,\n                'inkscape:label',\n                groupProps.name\n            )\n            groupElem.setAttributeNS(\n                this.namespace.inkscape,\n                'inkscape:groupmode',\n                'layer'\n            )\n        }\n        if (groupProps.id) groupElem.setAttribute('id', groupProps.id)\n        if (groupProps.fill) groupElem.setAttribute('fill', groupProps.fill)\n        if (groupProps.stroke)\n            groupElem.setAttribute('stroke', groupProps.stroke)\n        if (groupProps.strokeWidth)\n            groupElem.setAttribute('stroke-width', groupProps.strokeWidth)\n\n        if (groupProps.group) {\n            this.appendToGroup(groupProps.group, groupElem)\n        } else {\n            this.elem.appendChild(groupElem)\n        }\n        this.groups[groupProps.name] = groupElem\n    }\n    /**\n     * Export SVG dom element as file (groups will appear in Inkcape as layers)\n     * @param {Object} exportOptions svf export options\n     * @property {string} name - filename prefix (will be suffixed by a timestamp)\n     */\n    export(exportOptions) {\n        exportOptions.name =\n            exportOptions.name === undefined ? 'untitled' : exportOptions.name\n        let svgFile = null\n        const date = new Date(),\n            Y = date.getFullYear(),\n            m = date.getMonth(),\n            d = date.getDay(),\n            H = date.getHours(),\n            i = date.getMinutes()\n\n        const filename = `${exportOptions.name}.${this.size}.${Y}-${m}-${d}_${H}.${i}.svg`\n        const svgMarkup = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n                            ${this.elem.outerHTML}`\n        const data = new Blob([svgMarkup], {\n            type: 'application/xml' //'text/plain'\n        })\n        if (svgFile !== null) {\n            window.URL.revokeObjectURL(svgFile)\n        }\n        svgFile = window.URL.createObjectURL(data)\n\n        const link = document.createElement('a')\n        link.href = svgFile\n        link.download = filename\n        link.click()\n    }\n\n    /**\n     * Convert a centimeter size to pixels from current DPI\n     * @param {number} cm cm size to convert\n     * @returns {number} px size converted\n     */\n    cmToPixels(cm) {\n        if (!isNaN(cm)) {\n            return cm * this.dpiToPix[this.dpi]\n        } else {\n            console.error(\n                'The method cmToPixels() must be called with a number in centimeters.'\n            )\n        }\n    }\n}\n","export default class AutomataGrid {\n    /**\n     * Build a grid\n     * @param {number} cols number of columns of the grid\n     * @param {number} rows number of rows of the grid\n     */\n    constructor(cols, rows) {\n        this.cols = cols\n        this.rows = rows\n        this.value = []\n    }\n\n    /**\n     * Fill the grid with random value\n     * @param {number} percent of chance that cell is alive\n     */\n    init(percent = 0.35) {\n        this.value = []\n        for (let x = 0; x < this.cols; x++) {\n            for (let y = 0; y < this.rows; y++) {\n                this.value.push(Math.random() < percent)\n            }\n        }\n    }\n\n    /**\n     * Read each cell and change state (dead/alive) of them\n     * @param {number} neededAliveNeighboors the number of alive\n     * cell around to consider the current cell alive\n     * (exact match, not more, not less)\n     */\n    update(neededAliveNeighboors = 2) {\n        const nextValue = []\n\n        for (let x = 0; x <= this.cols; x++) {\n            for (let y = 0; y <= this.rows; y++) {\n                // Cell index in the flat array of this.value\n                const i = this.cols * x + y\n                // Alive cell around count\n                let aliveAround = 0\n\n                // top\n                if (y > 0 && this.value[i - 1]) {\n                    aliveAround++\n                }\n\n                // bottom\n                if (y < this.rows && this.value[i + 1]) {\n                    aliveAround++\n                }\n\n                // left\n                if (x > 0 && this.value[i - this.cols]) {\n                    aliveAround++\n                }\n\n                // right\n                if (x < this.cols && this.value[i + this.cols]) {\n                    aliveAround++\n                }\n\n                // top left\n                if (x > 0 && y > 0 && this.value[i - this.cols - 1]) {\n                    aliveAround++\n                }\n\n                // top right\n                if (x < this.cols && y > 0 && this.value[i + this.cols - 1]) {\n                    aliveAround++\n                }\n\n                // bottom right\n                if (\n                    x < this.cols &&\n                    y < this.rows &&\n                    this.value[i + this.cols + 1]\n                ) {\n                    aliveAround++\n                }\n\n                // bottom left\n                if (x > 0 && y < this.rows && this.value[i - this.rows + 1]) {\n                    aliveAround++\n                }\n\n                // Check if the number of alive cell around match neededAliveNeighbors\n                nextValue.push(aliveAround === neededAliveNeighboors)\n            }\n        }\n        this.value = [...nextValue]\n    }\n}\n","export default class MirrorShape {\n    constructor(cols, rows) {\n        this.cols = cols\n        this.rows = rows\n    }\n    allCorners(x, y) {\n        return [\n            [x, y],\n            [this.cols * 2 - x, y],\n            [x, this.rows * 2 - y],\n            [this.cols * 2 - x, this.rows * 2 - y]\n        ]\n    }\n    topLeftCorner(x, y) {\n        return [\n            [\n                [x, y],\n                [x + 1, y],\n                [x, y + 1]\n            ],\n            [\n                [this.cols * 2 - x, y],\n                [this.cols * 2 - x + 1, y],\n                [this.cols * 2 - x + 1, y + 1]\n            ],\n            [\n                [x, this.rows * 2 - y],\n                [x + 1, this.rows * 2 - y + 1],\n                [x, this.rows * 2 - y + 1]\n            ],\n            [\n                [this.cols * 2 - x + 1, this.rows * 2 - y],\n                [this.cols * 2 - x + 1, this.rows * 2 - y + 1],\n                [this.cols * 2 - x, this.rows * 2 - y + 1]\n            ]\n        ]\n    }\n    topRightCorner(x, y) {\n        return [\n            [\n                [x, y],\n                [x + 1, y],\n                [x + 1, y + 1]\n            ],\n            [\n                [this.cols * 2 - x, y],\n                [this.cols * 2 - x + 1, y],\n                [this.cols * 2 - x, y + 1]\n            ],\n            [\n                [x, this.rows * 2 - y + 1],\n                [x + 1, this.rows * 2 - y],\n                [x + 1, this.rows * 2 - y + 1]\n            ],\n            [\n                [this.cols * 2 - x, this.rows * 2 - y],\n                [this.cols * 2 - x + 1, this.rows * 2 - y + 1],\n                [this.cols * 2 - x, this.rows * 2 - y + 1]\n            ]\n        ]\n    }\n    bottomRightCorner(x, y) {\n        return [\n            [\n                [x + 1, y],\n                [x + 1, y + 1],\n                [x, y + 1]\n            ],\n            [\n                [this.cols * 2 - x, y],\n                [this.cols * 2 - x + 1, y + 1],\n                [this.cols * 2 - x, y + 1]\n            ],\n            [\n                [x, this.rows * 2 - y],\n                [x + 1, this.rows * 2 - y],\n                [x + 1, this.rows * 2 - y + 1]\n            ],\n            [\n                [this.cols * 2 - x, this.rows * 2 - y + 1],\n                [this.cols * 2 - x, this.rows * 2 - y],\n                [this.cols * 2 - x + 1, this.rows * 2 - y]\n            ]\n        ]\n    }\n    bottomLeftCorner(x, y) {\n        return [\n            [\n                [x + 1, y + 1],\n                [x, y + 1],\n                [x, y]\n            ],\n            [\n                [this.cols * 2 - x + 1, y],\n                [this.cols * 2 - x + 1, y + 1],\n                [this.cols * 2 - x, y + 1]\n            ],\n            [\n                [x, this.rows * 2 - y],\n                [x + 1, this.rows * 2 - y],\n                [x, this.rows * 2 - y + 1]\n            ],\n            [\n                [this.cols * 2 - x, this.rows * 2 - y],\n                [this.cols * 2 - x + 1, this.rows * 2 - y],\n                [this.cols * 2 - x + 1, this.rows * 2 - y + 1]\n            ]\n        ]\n    }\n}\n","export default class PlottingFunction {\n    constructor(svg, mirror, cellSize) {\n        this.svg = svg\n        this.mirror = mirror\n        this.cellSize = cellSize\n    }\n\n    _d (point) {\n        return [point[0] * this.cellSize.w, point[1] * this.cellSize.h]\n    }\n\n    fillCell (x, y, color) {\n        this.mirror.allCorners(x, y).forEach(() => {\n            const pos = this._d([x, y])\n            this.svg.rect({\n                x: pos.x,\n                //y: pos.y,\n                w: this.cellSize.w,\n                y: this.cellSize.h,\n                group: color\n            })\n        })\n    }\n    topLeftTriangle (x, y, color) {\n        this.mirror.topLeftCorner(x, y).forEach((p) => {\n            const points = p.map((pos) => this._d(pos))\n            this.svg.triangle({\n                points: points,\n                group: color\n            })\n        })\n    }\n    topRightTriangle (x, y, color) {\n        this.mirror.topRightCorner(x, y).forEach((p) => {\n            const points = p.map((pos) => this._d(pos))\n            this.svg.triangle({\n                points: points,\n                group: color\n            })\n        })\n    }\n    bottomRightTriangle (x, y, color) {\n        this.mirror.bottomRightCorner(x, y).forEach((p) => {\n            const points = p.map((pos) => this._d(pos))\n            this.svg.triangle({\n                points: points,\n                group: color\n            })\n        })\n    }\n    bottomLeftTriangle (x, y, color) {\n        this.mirror.bottomLeftCorner(x, y).forEach((p) => {\n            const points = p.map((pos) => this._d(pos))\n            this.svg.triangle({\n                points: points,\n                group: color\n            })\n        })\n    }\n}\n","/**\n * Stabilo pen 68 Arty edition (18 pens colors)\n * More info about theses pens :\n * https://www.stabilo.com/fr/produits/colorier/feutres-de-coloriage/stabilo-pen-68/\n */\n\nconst colorsDefs = {\n    46: { name: 'Black', value: '#000' },\n    95: { name: 'Medium cold gray', value: '#a9c1d0' },\n    59: { name: 'Brigth lilac', value: '#bf86b7' },\n    58: { name: 'Lilac', value: '#c34bb4' },\n    56: { name: 'Rose', value: '#e2447c' },\n    19: { name: 'Purple', value: '#973060' },\n    48: { name: 'Carmine', value: '#ed404b' },\n    45: { name: 'Brown', value: '#a85e3f' },\n    54: { name: 'Orange', value: '#ec9543' },\n    26: { name: 'Light flesh tint', value: '#f6b9b8' },\n    88: { name: 'Light ocre', value: '#e5d47c' },\n    44: { name: 'Yellow', value: '#fef05d' },\n    24: { name: 'Fluorescent yellow', value: '#fff65c' },\n    32: { name: 'Ultramarine', value: '#232f8d' },\n    31: { name: 'Fluorescent blue', value: '#005ec7' },\n    13: { name: 'Ice green', value: '#5edfe9' },\n    51: { name: 'Turquoise blue', value: '#4cbad4' },\n    36: { name: 'Emerald green', value: '#5ac061' }\n}\n\n// A list of color combination, first key is used to the number of combined colors\nconst colorsCombinations = {\n    2: {\n        Sunset: [19, 54],\n        'Nordic mist': [95, 19],\n        'Swimming Pool': [51, 46],\n        'Double blue': [13, 32],\n        Mistenta: [95, 58],\n        'Bubble Gum': [56, 46],\n        Azerty: [46, 24],\n        'Vanilla Straberry': [56, 88],\n        'Flesh and shadows': [26, 46],\n        Fall: [26, 19],\n        Toy: [31, 54]\n    },\n    3: {\n        'Sand and sea': [31, 32, 26],\n        'Acid toy': [36, 51, 48],\n        'Cold nature': [32, 51, 36],\n        Basketball: [58, 24, 88],\n        'Fluo dream': [13, 44, 26],\n        Mondrian: [44, 48, 32]\n    },\n    4: {\n        'Cyan meet tomato': [32, 59, 48, 13],\n        'Yellow starship': [44, 95, 46, 24],\n        'Sausage and mustard': [51, 48, 44, 26]\n    }\n}\n\n/**\n * Simple function which returns the list of colors Ids\n * @returns {array} of Ids (int)\n */\nconst getColorIds = () => {\n    const colorIds = Object.keys(colorsDefs)\n    return colorIds\n}\n/**\n * Simple function to return a single colors from colorsDefs\n * @returns {object} color {id, name & value}\n */\nconst getSingleColors = (colorID = false) => {\n    let singleColorId\n    if (colorID) {\n        singleColorId = colorID\n    } else {\n        const colorIds = getColorIds()\n        const randomColorId =\n            colorIds[Math.floor(Math.random() * colorIds.length)]\n        singleColorId = randomColorId\n    }\n\n    const chooseColor = colorsDefs[singleColorId]\n    chooseColor['id'] = singleColorId\n    return chooseColor\n}\n/**\n * Return unique colors from\n * @param {int} colorNum : how many colors you want\n * @returns {array} of colors objects\n */\nconst getRandomPalette = (colorNum = 1) => {\n    const colors = []\n    const colorsIds = []\n\n    if (colorNum >= colorsDefs.length) {\n        console.log('We only have ', colorsDefs.length - 1, ' colors. Sorry.')\n    }\n\n    while (colors.length < colorNum) {\n        const newcolors = getSingleColors()\n        if (!colorsIds.includes(newcolors.id)) {\n            colors.push(newcolors)\n        }\n    }\n    console.log(colors)\n    return colors\n}\n/**\n * Get an array of color from combined colors\n * @param {int|boolean} colorNum the number of returned colors or false if combinationName specified\n * @param {false|String} combinationName false if random,, String if you want a specific combination\n * @returns {array} of colors objects\n */\nconst getColorCombination = (colorNum = 2, combinationName = false) => {\n    let selectedCombination = false\n    let selectedCombinationName = null\n\n    // Check if user want multiple colors\n    if (colorNum && colorNum < 2) {\n        console.error(\n            'Color combination means multiple colors (2 colors minimum).'\n        )\n        return\n    }\n    // Check if there is combination with the number of colors\n    if (colorNum && colorsCombinations[colorNum] === undefined) {\n        console.error(\n            \"Sorry we didn't implemented color combination with \",\n            colorNum,\n            ' colors.'\n        )\n        return\n    }\n    // User want a specific combination\n    if (combinationName) {\n        for (const [numColor, combinations] of Object.entries(\n            colorsCombinations\n        )) {\n            if (combinations !== undefined) {\n                for (const [name, colorsIds] of Object.entries(combinations)) {\n                    if (name === combinationName) {\n                        selectedCombinationName = combinationName\n                        selectedCombination = colorsIds\n                    }\n                }\n            }\n        }\n    }\n    // User want a random combination\n    else if (colorsCombinations[colorNum]) {\n        const rightColorNumCombinations = Object.keys(\n            colorsCombinations[colorNum]\n        )\n        const randomCombinationNum = Math.floor(\n            Math.random() * rightColorNumCombinations.length\n        )\n        selectedCombinationName =\n            rightColorNumCombinations[randomCombinationNum]\n        selectedCombination =\n            colorsCombinations[colorNum][selectedCombinationName]\n    }\n\n    if (selectedCombination && selectedCombinationName) {\n        const returnedColors = []\n        selectedCombination.forEach((colorId) => {\n            returnedColors.push(getSingleColors(colorId))\n        })\n\n        return { name: selectedCombinationName, colors: returnedColors }\n    } else {\n        return false\n    }\n}\n\nexport { getRandomPalette, getColorCombination }\n","import './notification.css'\n/**\n * Notification class\n * @param {string} message the text to display\n * @param {object} parentElem the node element where append it\n * @param {string} mode dark|light the style of the box\n * @param {(number|boolean)} duration miliseconds delay before remove notification or false for a permanent display\n */\nexport default class Notification {\n    constructor(message, parentElem, mode = 'dark', duration = 5000) {\n        this.elem = document.createElement('p')\n        this.elem.id = 'notification'\n        if (mode == 'dark' || mode == 'light') {\n            this.elem.classList.add(mode)\n        } else {\n            console.error(\n                `Undefined mode (${mode}), possible options: dark & light.`\n            )\n        }\n        this.elem.innerHTML = message\n\n        if (parentElem !== undefined) {\n            this.parentElem = parentElem\n            parentElem.appendChild(this.elem)\n            if (duration) {\n                window.setTimeout(() => {\n                    parentElem.removeChild(this.elem)\n                }, duration)\n            }\n        } else {\n            this.parentElem = false\n            console.error(\"Parent elem doesn't exist.\")\n        }\n    }\n    remove () {\n        if (this.parentElem) {\n            this.parentElem.removeChild(this.elem)\n        }\n    }\n}\n","import '../framed-canvas.css'\nimport '../framed-two-columns.css'\nimport infobox from '../../sketch-common/infobox'\nimport handleAction from '../../sketch-common/handle-action'\nimport SvgTracer from '../../sketch-common/svg-tracer'\nimport AutomataGrid from '../../sketch-common/AutomataGrid'\nimport MirrorShape from './MirrorShape'\nimport PlottingFunction from './PlottingFunction'\nimport { getRandomPalette } from '../../sketch-common/stabilo68-colors'\nimport Notification from '../../sketch-common/Notification'\n\nconst windowFrame = document.getElementById('windowFrame')\nconst loader = document.getElementById('loading')\n\nconst sketch = {\n  svg: new SvgTracer({\n    parentElem: document.getElementById('windowFrame'),\n    size: 'A4_portrait',\n    dpi: 150\n  }),\n  g: undefined,\n  mirror: false,\n  palette: false,\n  cellSize: undefined,\n  groupsByColor: [],\n  plot: false,\n  neededAliveNeighboors: 2,\n  initPercentChanceAliveCell: 0.5,\n  launch: () => {\n    sketch.svg.init()\n    sketch.init()\n  },\n  init: () => {\n    sketch.g = new AutomataGrid(8, 12)\n    sketch.cellSize = {\n      w: sketch.svg.width / (1 + sketch.g.cols * 2),\n      h: sketch.svg.height / (1 + sketch.g.rows * 2)\n    }\n    sketch.mirror = new MirrorShape(sketch.g.cols, sketch.g.rows)\n    sketch.plot = new PlottingFunction(\n      sketch.svg,\n      sketch.mirror,\n      sketch.cellSize\n    )\n    sketch.g.init(sketch.initPercentChanceAliveCell)\n    sketch.changeColor()\n    sketch.g.update(sketch.neededAliveNeighboors)\n    sketch.fillSvg()\n  },\n  update: () => {\n    sketch.g.update(sketch.neededAliveNeighboors)\n    const aliveCellInGrid = sketch.g.value.reduce((stock, cell) => {\n      return cell || stock ? true : false\n    })\n    if (!aliveCellInGrid) {\n      new Notification(\n        'All cells died, the grid has been reinitialized.',\n        sketch.svg.parentElem,\n        'light'\n      )\n      sketch.g.init()\n    }\n    sketch.fillSvg()\n  },\n  fillSvg: () => {\n    sketch.svg.clearGroups()\n    for (let x = 0; x <= sketch.g.cols; x++) {\n      for (let y = 0; y <= sketch.g.rows; y++) {\n        const i = x * sketch.g.cols + y\n        const colorNum = i % sketch.palette.length\n\n        // top and bottom\n        if (\n          y > 0 &&\n          y < sketch.g.rows &&\n          sketch.g.value[i - sketch.g.rows] &&\n          sketch.g.value[i + sketch.g.rows]\n        ) {\n          sketch.plot.topLeftTriangle(\n            x,\n            y,\n            sketch.groupsByColor[colorNum]\n          )\n          sketch.plot.fillCell(x, y, sketch.groupsByColor[colorNum])\n        }\n        // left & right\n        if (\n          x > 0 &&\n          x < sketch.g.cols &&\n          sketch.g.value[i + sketch.g.cols] &&\n          sketch.g.value[i - sketch.g.cols]\n        ) {\n          sketch.plot.bottomRightTriangle(\n            x,\n            y,\n            sketch.groupsByColor[colorNum]\n          )\n          sketch.plot.fillCell(x, y, sketch.groupsByColor[colorNum])\n        }\n        // top & left\n        if (\n          x > 0 &&\n          y > 0 &&\n          sketch.g.value[i - 1] &&\n          sketch.g.value[i - sketch.g.cols]\n        ) {\n          sketch.plot.topLeftTriangle(\n            x - 1,\n            y - 1,\n            sketch.groupsByColor[colorNum]\n          )\n        }\n        // top & right\n        if (\n          x < sketch.g.cols &&\n          y > 0 &&\n          sketch.g.value[i - 1] &&\n          sketch.g.value[i + sketch.g.cols]\n        ) {\n          sketch.plot.topRightTriangle(\n            x + 1,\n            y - 1,\n            sketch.groupsByColor[colorNum]\n          )\n        }\n        // bottom & right\n        if (\n          x < sketch.g.cols &&\n          y < sketch.g.rows &&\n          sketch.g.value[i + 1] &&\n          sketch.g.value[i + sketch.g.cols]\n        ) {\n          sketch.plot.bottomRightTriangle(\n            x + 1,\n            y + 1,\n            sketch.groupsByColor[colorNum]\n          )\n        }\n        // bottom & left\n        if (\n          x > 0 &&\n          y < sketch.g.rows &&\n          sketch.g.value[i + 1] &&\n          sketch.g.value[i - sketch.g.cols]\n        ) {\n          sketch.plot.bottomLeftTriangle(\n            x - 1,\n            y + 1,\n            sketch.groupsByColor[colorNum]\n          )\n        }\n      }\n    }\n  },\n  changeColor: () => {\n    sketch.groupsByColor = []\n    sketch.svg.clear()\n    sketch.palette = getRandomPalette(4)\n    sketch.palette.forEach((color) => {\n      const groupName = color.name.replace(' ', '_').toLowerCase()\n      sketch.svg.group({ name: groupName, fill: color.value })\n      sketch.groupsByColor.push(groupName)\n    })\n    sketch.fillSvg()\n  },\n  downloadSVG: () => {\n    if (window.confirm('Do you want to download the SVG file ?')) {\n      sketch.svg.export({\n        name: 'cells'\n      })\n    }\n  }\n}\n\nconst paramBox = document.createElement('div')\nparamBox.id = 'interactiveParameter'\n\nconst updateButton = document.createElement('button')\nupdateButton.innerText = '▶ Update the grid'\nparamBox.appendChild(updateButton)\nupdateButton.addEventListener(\n  'click',\n  () => {\n    sketch.update()\n  },\n  false\n)\nconst colorButton = document.createElement('button')\ncolorButton.innerText = '🔄 Change color'\nparamBox.appendChild(colorButton)\ncolorButton.addEventListener(\n  'click',\n  () => {\n    sketch.changeColor()\n    sketch.fillSvg()\n  },\n  false\n)\n\nsketch.launch()\nwindowFrame.removeChild(loader)\nwindow.init = sketch.init\nwindow.infobox = infobox\nwindow.downloadSVG = sketch.downloadSVG\nwindowFrame.appendChild(paramBox)\nhandleAction()\n"],"names":["const","this","let"],"mappings":"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"}