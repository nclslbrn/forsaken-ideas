import p5 from 'p5'
import { getPalette } from '@nclslbrn/artistry-swatch'
import Subdivision from '../../sketch-common/Subdivision'
import '../framed-canvas.css'
import infobox from '../../sketch-common/infobox'
import handleAction from '../../sketch-common/handle-action'

const windowFrame = document.getElementById('windowFrame')
const loader = document.getElementById('loading')
let canvas, palette

const sketch = (p5) => {
    const _x = (x) => x * p5.width
    const _y = (y) => y * p5.height
    const cellNum = 24 + Math.round(Math.random() * 64)
    const sp = 2 + Math.floor(Math.random() * 4)
    const grid = new Subdivision({
        baseSize: 0.01,
        firstCellWidth: 1,
        firstCellHeight: 1
    })

    const drawCell = (cell) => {
        const cols = cell.w / grid.baseSize
        const rows = cell.h / grid.baseSize
        for (let x = 0; x < cols; x++) {
            for (let y = 0; y < rows; y++) {
                const c =
                    y % 2 === 0 && x % 2 === 0
                        ? palette.colors[
                              (cell.w > cell.h ? x : y) % palette.colors.length
                          ]
                        : palette.background

        p5.fill(c)
                p5.rect(
                    _x(cell.x + x * grid.baseSize),
                    _y(cell.y + y * grid.baseSize),
                    _x(grid.baseSize) - sp,
                    _y(grid.baseSize) - sp
                )
            }
        }
    }

    sketch.init = function () {
        palette = getPalette()
        p5.background(palette.background)
        p5.stroke(palette.background)
        grid.init()
        for (let i = 0; i < cellNum; i++) {
            grid.subdivide()
        }
        console.log(grid.cells[0])
        grid.cells.forEach((cell) => drawCell(cell))
    }
    sketch.download_JPG = function () {
        const date = new Date()
        const filename =
            'sketch--effect.' +
            '-' +
            date.getHours() +
            '.' +
            date.getMinutes() +
            '.' +
            date.getSeconds()
        p5.save(canvas, filename, 'jpg')
    }
    p5.setup = function () {
        canvas = p5.createCanvas(1200, 1600)
        sketch.init()
    }
}

new p5(sketch, windowFrame)
windowFrame.removeChild(loader)
window.init = sketch.init
window.download_JPG = sketch.download_JPG
window.infobox = infobox
handleAction()
